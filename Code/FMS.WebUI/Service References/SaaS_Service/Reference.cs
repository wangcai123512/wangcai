//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace FMS.WebUI.SaaS_Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemInfo", Namespace="http://schemas.datacontract.org/2004/07/SaaS_Service")]
    [System.SerializableAttribute()]
    public partial class SystemInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SaaS_Service.ISaaS_Service")]
    public interface ISaaS_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/GetAllJsomTreeByAccountID", ReplyAction="http://tempuri.org/ISaaS_Service/GetAllJsomTreeByAccountIDResponse")]
        string GetAllJsomTreeByAccountID(string AccountID, string CurrentCulture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/GetSubSystemModuleIDComposeForAdmin", ReplyAction="http://tempuri.org/ISaaS_Service/GetSubSystemModuleIDComposeForAdminResponse")]
        string GetSubSystemModuleIDComposeForAdmin(string subSystemId, string AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/GetAllJsomTreeLoginSystemIDAndAccountIDForAdmin", ReplyAction="http://tempuri.org/ISaaS_Service/GetAllJsomTreeLoginSystemIDAndAccountIDForAdminR" +
            "esponse")]
        string GetAllJsomTreeLoginSystemIDAndAccountIDForAdmin(string SubsystemID, string AccountID, string CurrentCulture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/GetAllAllowModuleIDsBySystemIDAndAccountID", ReplyAction="http://tempuri.org/ISaaS_Service/GetAllAllowModuleIDsBySystemIDAndAccountIDRespon" +
            "se")]
        System.Collections.Generic.List<string> GetAllAllowModuleIDsBySystemIDAndAccountID(string SubsystemID, string AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/GetUserDependentServiceInterfacePath", ReplyAction="http://tempuri.org/ISaaS_Service/GetUserDependentServiceInterfacePathResponse")]
        string GetUserDependentServiceInterfacePath(string SubsystemID, string AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/GetRMInterfacePath", ReplyAction="http://tempuri.org/ISaaS_Service/GetRMInterfacePathResponse")]
        string GetRMInterfacePath(string SubsystemID, string AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/GetAllSystems", ReplyAction="http://tempuri.org/ISaaS_Service/GetAllSystemsResponse")]
        System.Collections.Generic.List<FMS.WebUI.SaaS_Service.SystemInfo> GetAllSystems(string AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/IsAllowAccessByModuleAndAccountID", ReplyAction="http://tempuri.org/ISaaS_Service/IsAllowAccessByModuleAndAccountIDResponse")]
        bool IsAllowAccessByModuleAndAccountID(string ModuleID, string AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/IsAllowAccessByFubfunctionCodeAndAccountID", ReplyAction="http://tempuri.org/ISaaS_Service/IsAllowAccessByFubfunctionCodeAndAccountIDRespon" +
            "se")]
        bool IsAllowAccessByFubfunctionCodeAndAccountID(string SubfunctionCode, string AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaaS_Service/VerifyLegitimacy", ReplyAction="http://tempuri.org/ISaaS_Service/VerifyLegitimacyResponse")]
        bool VerifyLegitimacy(int userCount, string accID, string sysID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISaaS_ServiceChannel : FMS.WebUI.SaaS_Service.ISaaS_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaaS_ServiceClient : System.ServiceModel.ClientBase<FMS.WebUI.SaaS_Service.ISaaS_Service>, FMS.WebUI.SaaS_Service.ISaaS_Service {
        
        public SaaS_ServiceClient() {
        }
        
        public SaaS_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SaaS_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaaS_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaaS_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAllJsomTreeByAccountID(string AccountID, string CurrentCulture) {
            return base.Channel.GetAllJsomTreeByAccountID(AccountID, CurrentCulture);
        }
        
        public string GetSubSystemModuleIDComposeForAdmin(string subSystemId, string AccountID) {
            return base.Channel.GetSubSystemModuleIDComposeForAdmin(subSystemId, AccountID);
        }
        
        public string GetAllJsomTreeLoginSystemIDAndAccountIDForAdmin(string SubsystemID, string AccountID, string CurrentCulture) {
            return base.Channel.GetAllJsomTreeLoginSystemIDAndAccountIDForAdmin(SubsystemID, AccountID, CurrentCulture);
        }
        
        public System.Collections.Generic.List<string> GetAllAllowModuleIDsBySystemIDAndAccountID(string SubsystemID, string AccountID) {
            return base.Channel.GetAllAllowModuleIDsBySystemIDAndAccountID(SubsystemID, AccountID);
        }
        
        public string GetUserDependentServiceInterfacePath(string SubsystemID, string AccountID) {
            return base.Channel.GetUserDependentServiceInterfacePath(SubsystemID, AccountID);
        }
        
        public string GetRMInterfacePath(string SubsystemID, string AccountID) {
            return base.Channel.GetRMInterfacePath(SubsystemID, AccountID);
        }
        
        public System.Collections.Generic.List<FMS.WebUI.SaaS_Service.SystemInfo> GetAllSystems(string AccountID) {
            return base.Channel.GetAllSystems(AccountID);
        }
        
        public bool IsAllowAccessByModuleAndAccountID(string ModuleID, string AccountID) {
            return base.Channel.IsAllowAccessByModuleAndAccountID(ModuleID, AccountID);
        }
        
        public bool IsAllowAccessByFubfunctionCodeAndAccountID(string SubfunctionCode, string AccountID) {
            return base.Channel.IsAllowAccessByFubfunctionCodeAndAccountID(SubfunctionCode, AccountID);
        }
        
        public bool VerifyLegitimacy(int userCount, string accID, string sysID) {
            return base.Channel.VerifyLegitimacy(userCount, accID, sysID);
        }
    }
}
