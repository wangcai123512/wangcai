@{
    ViewBag.Title = "BalanceSheet";
    Layout = "~/Views/Shared/_Layout_New.cshtml";
}
<style type="text/css">
    .cssInput {
        -moz-appearance: textfield;
    }
</style>
<div id="main" style="margin-top: 100px; background-color: #FFF">
    @Html.Partial("_ReportLeftMenu");
    <!-- Start: Content -->
    <section id="content_wrapper">
        <div id="content">
            <div style="margin-bottom: 20px; text-align: center"><span style="font-size: 30px; font-weight: 900; color: #074592; text-decoration: underline">资产负债表</span></div>

            <div class="col-md-12" style="margin: auto">
                <div style ="width:59%;height:20px;margin-left:78%">
                    @*<a href="#" style="cursor: pointer; color: #08C; padding: 5px 10px 5px 5px; font-weight: bold" onclick="GetPdf('pdf')">PDF</a>
                    <a href="#" style="cursor: pointer; color: #08C; padding: 5px 10px 5px 5px; font-weight: bold; " onclick="GetPdf('excel')">Excel</a>*@
                    <a href="#" style="cursor: pointer; color: #08C; padding: 5px 10px 5px 5px; font-weight: bold" onclick="GetPdfs('@Session["CompanyName"]', '@FMS.Resource.FinanceReport.FinanceReport.RepDate:@ViewBag.RepTitle')">PDF</a>
                    <a href="#" style="cursor: pointer; color: #08C; padding: 5px 10px 5px 5px; font-weight: bold; " onclick="GetPdf('excel','@Session["CompanyName"]','@FMS.Resource.FinanceReport.FinanceReport.RepDate:@ViewBag.RepTitle')">Excel</a>
                </div>
               
                <div class="col-md-12" style="height:29px;margin-top:1%;">

                    @if (@ViewBag.status != "已结账" && @ViewBag.RepId != "" && @ViewBag.type != "seach")
                    {
                        <button type="button" class="btn btn-primary pull-left button-radius" onclick="UpdateBanlance('/BalanceSheet/UpdBalanceSheet', '/BalanceSheet/Index')">
                            提交报表
                        </button>
                    }

                    @*<input type="button" value="导出pdf" onclick="GetPdf()" />*@
                    <input id="hidType" type="hidden" value="@ViewBag.Type" />
                    <input id="hidEnd" type="hidden" value="@ViewBag.End">
                    <input id="hidRepDate" type="hidden" value="@ViewBag.RepDate" />
                    <input type="hidden" value="@ViewBag.RepId" id="repId">
                    <input id="hidStatus" type="hidden" value="@ViewBag.status" />
                    <button onclick="javascript: window.location = '/BalanceSheet/Index'" class="btn btn-primary pull-right button-radius">
                        返回上页
                    </button>
                    @if (!ViewBag.IsView && @ViewBag.type != "seach")
                    {
                        @*<button type="button" class="btn btn-primary pull-left button-radius" onclick="CreateBanlance('/BalanceSheet/CreateBalanceSheet', '/BalanceSheet/Index')">
                    生成报表
                </button>*@
                        <button type="button" style="margin-right:5px;" class="btn btn-primary pull-right button-radius" onclick="settled('@ViewBag.RepDate','@ViewBag.RepId','已结账','@ViewBag.Type','@ViewBag.Period')">
                            结账
                        </button>
                    }
                    @if (@ViewBag.status == "未结账" && @ViewBag.type != "seach")
                    {

                        <button type="button" style="margin-right:5px;" class="btn btn-primary pull-right button-radius" onclick="settled('@ViewBag.RepDate','@ViewBag.RepId','已结账','@ViewBag.Type','@ViewBag.Period')">
                            结账
                        </button>
                    }
                    else if (@ViewBag.status == "已结账" && @ViewBag.type != "seach")
                    {
                        <button type="button" class="btn btn-primary pull-right button-radius" style="margin-right:5px;">
                            已结账
                        </button>
                    }

                </div>

                <div class="col-md-4"><span style="font-size: 20px; text-align:left;">公司: @Session["CompanyName"]</span></div>
                <div class="col-md-4" style="margin: auto; text-align:center;"><span style="font-size: 20px; text-align:left;">@FMS.Resource.FinanceReport.FinanceReport.RepDate: @ViewBag.RepTitle</span></div>
                <div class="col-md-4" style="margin: auto; text-align:right;"><span style="font-size: 20px; text-align:right;">单位：元</span></div>

                <table id="BalanceSheet" class="table table-striped table-bordered table-condensed" style="white-space:pre"></table>
            </div>
            <div class="col-md-1" style="margin: auto"></div>
            
    </section>
</div>
<script language="javascript" type="text/javascript">
    jQuery(document).ready(function () {
        var columnContent = [];
        if ($('#hidStatus').val() == "已结账") {
            columnContent = [[
              { field: 'asset_item_name', title: '资产', width: "20%" },
              { field: 'asset_row_no', title: '行次', width: "10%" },
              { field: 'asset_start_amount', title: '年初数', width: "10%", formatter: DecimalFmter },
              { field: 'asset_end_amount', title: '期末数', width: "10%", formatter: DecimalFmter },
              { field: 'debt_item_name', title: '负债及所有者权益', width: "20%" },
              { field: 'debt_row_no', title: '行次', width: "10%" },
              { field: 'debt_start_amount', title: '年初数', width: "10%", formatter: DecimalFmter },
              { field: 'debt_end_amount', title: '期末数', width: "10%", formatter: DecimalFmter }
            ]];
        } else {
            columnContent = [[
                 { field: 'asset_item_name', title: '资产', width: "20%" },
                 { field: 'asset_row_no', title: '行次', width: "10%" },
                 {field: 'asset_start_amount', title: '年初数', width: "10%", formatter: DecimalFmter, editable: { type: 'number', emptytext: "0.00", noedit: GetAssetDecimalFmter}},
                 {field: 'asset_end_amount', title: '期末数', width: "10%", formatter: DecimalFmter, editable: {type: 'number', emptytext: "0.00", noedit: GetAssetDecimalFmter }},
                 { field: 'debt_item_name', title: '负债及所有者权益', width: "20%" },
                 { field: 'debt_row_no', title: '行次', width: "10%" },
                 { field: 'debt_start_amount', title: '年初数', width: "10%", formatter: DecimalFmter, editable: { type: 'number', emptytext: "0.00", noedit: GetDebtDecimalFmter } },
                 { field: 'debt_end_amount', title: '期末数', width: "10%", formatter: DecimalFmter, editable: { type: 'number', emptytext: "0.00", noedit: GetDebtDecimalFmter } }
            ]];
        }
        $('#BalanceSheet').bootstrapTable("destroy");
        $('#BalanceSheet').bootstrapTable({
            url: "/BalanceSheet/GetBalanceSheet?id=" + $('#repId').val() + "&status=" + $('#hidStatus').val() + "&reportDate=" + $('#hidRepDate').val() + "&type=" + $('#hidType').val() + "&end=" + $('#hidEnd').val(),
            method: 'get',
            pageSize: 100,
            pageNumber: 1,
            singleSelect: false,
            clickToSelect: false,
            checkOnSelect: false,
            selectOnCheck: false,
            //pagination: true,
            search: false, // 开启搜索功能
            showColumns: false,
            showRefresh: false,
            showQuery: false,
            showToggle: false,
            //showExport: true,
            //exportTypes: ['excel', 'pdf'],
            //exportName:'资产负债表' ,
            //detailView:true,
            columns: columnContent,
            onEditableSave: UpdateTableRow,
            pagination: false,
            rownumbers: true,
            queryParams: { id: $('#repId').val(), status: $('#hidStatus').val(), reportDate: $('#hidRepDate').val(), type: $('#hidType').val(), end: $('#hidEnd').val() },
            onLoadSuccess: ComputedAmount
        });
    });

    //function GetPdfs(a,b) {
    //    var myTable = $("#BalanceSheet");
    //    // 获取title
    //    var tableThs = myTable.find("thead th");
    //    //获取每个tr
    //    var tableTrs = myTable.find("tbody tr");
    //    var columns = [];
    //    //处理title数组
    //    tableThs.each(function () {
    //        columns.push({ title: $(this).text(), key: $(this).text() });
    //    });
    //    //处理数据数组
    //    var data = [];
    //    var count = 0;
    //    tableTrs.each(function () {
    //        var tds = $(this).children();
    //        var object = {};
    //        count += 1;
    //        //生成数据对象
    //        $.each(columns, function (i, r) {
    //            var tdTitle = columns[i].key;
    //            //'object'跟上文对象名称一致，动态件加属性和值
    //            var obj = $(tds).eq(i).text();

    //            if (count <= 7) {
    //                //obj = "支付给职工以及为职工支付的现金";
    //                //obj = "处置固定资产、无形资产和其他长期资产所收回的现金净额";
    //            }
    //            eval('object.' + tdTitle + '="' + obj + '"');
    //        });
    //        data.push(object);
    //    });

    //    var doc = new jsPDF('p', 'pt');
    //    doc.addFont('simhei.ttf', 'simhei', 'normal');
    //    doc.setFont('simhei');
    //    //doc.autoTableText('四、现金净增加额', 22, 454.399999, { cellPadding: 0.5, fontSize: 8, font: "msyh" });
    //    doc.autoTable(columns, data, { styles: { cellPadding: 0.5, fontSize: 8, font: "msyh" }, bodyStyles: { font: "msyh" } });

    //    doc.save('导出.pdf');
    //}

    function GetPdfs(a, b) {
        //alert(b);exit;
        var companyname = '公司:' + a;
        var myTable = $("#BalanceSheet");
        // 获取title
        var tableThs = myTable.find("thead th");
        //获取每个tr
        var tableTrs = myTable.find("tbody tr");
        var columns = [];
        //处理title数组
        tableThs.each(function () {
            columns.push({ title: $(this).text(), key: $(this).attr("data-field") });
        });
        //处理数据数组
        var data = [];
        tableTrs.each(function () {
            var tds = $(this).children();
            var object = {};
            //生成数据对象
            $.each(columns, function (i, r) {
                var tdTitle = columns[i].key;
                //'object'跟上文对象名称一致，动态件加属性和值
                eval('object.' + tdTitle + '="' + $(tds).eq(i).text() + '"');
            });
            data.push(object);
        });

        var doc = new jsPDF('p', 'pt');
        doc.addFont('simhei.ttf', 'simhei', 'normal');
        doc.setFont('simhei');
        //doc.autoTableText('四、现金净增加额', 22, 454.399999, { cellPadding: 0.5, fontSize: 8, font: "msyh" });
        doc.autoTableText('资产负债表', 260, 5, { alternateRowStyles: { cellPadding: 0.5, fontSize: 4, font: "msyh" } });
        doc.autoTableText('', 260, 25, { styles: { cellPadding: 0.5, fontSize: 4, font: "msyh" } });
        doc.autoTableText(companyname, 40, 35, { alternateRowStyles: { cellPadding: 0.5, fontSize: 4, font: "msyh" } });
        doc.autoTableText(b, 220, 35, { alternateRowStyles: { cellPadding: 0.5, fontSize: 4, font: "msyh" } });
        doc.autoTableText('单位:元', 500, 35, { alternateRowStyles: { cellPadding: 0.5, fontSize: 4, font: "msyh" } });
        doc.autoTable(columns, data, { styles: { cellPadding: 0.5, fontSize: 10, font: "msyh" }, bodyStyles: { font: "msyh" }, margin: [60, 40, 40, 40] });

        doc.save("资产负债表(" + getUrlParms("reportDate") + ")" + getUrlParms("type") + ".pdf");
    }

    function GetPdf(obj,a,b) {
        var fileName = "资产负债表(" + getUrlParms("reportDate") + ")" + getUrlParms("type");
        var title = "资产负债表";
        $("#BalanceSheet").tableExport({
            type: obj,
            escape: false,
            fileName: fileName,
            title:title,
            company: a,
            midtitle:b
        })
    }

    //function GetPdf(obj) {
    //    var fileName = "资产负债表(" + getUrlParms("reportDate") + ")" + getUrlParms("type");
    //    $("#BalanceSheet").tableExport({
    //        type: obj,
    //        escape: false,
    //        fileName: fileName
    //    })
    //}
    function getUrlParms(name) {
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
        var r = window.location.search.substr(1).match(reg);
        if (r != null)
            return unescape(r[2]);
        return null;
    }
    function CreateBanlance(createUrl, successUrl) {
        console.log(new Date());
        var data = $("#BalanceSheet").bootstrapTable("getData");
        for (var i = 0; i < data.length; i++) {
            data[i].asset_start_amount = String(data[i].asset_start_amount);
            data[i].asset_end_amount = String(data[i].asset_end_amount);
            data[i].debt_start_amount = String(data[i].debt_start_amount);
            data[i].debt_end_amount = String(data[i].debt_end_amount);
        }
        console.log(new Date());
        $.ajax(
        {
            url: createUrl,
            type: "post",
            async: true,
            contentType: 'application/json',
            dataType: "html",
            type: "POST",
            data: JSON.stringify({ repDate: $('#hidRepDate').val(), type: $('#hidType').val(), lstBanlance: data }),
            success: function (d) {
                d = eval('(' + d + ')');
                if (d.success) {
                    alert("报表创建成功。");
                    window.location = successUrl
                } else {
                    alert("报表创建失败：" + d.msg);
                }
                console.log(new Date());
            }

        })
       
    }

    function UpdateBanlance(createUrl, successUrl) {

        var data = $("#BalanceSheet").bootstrapTable("getData");
        for (var i = 0; i < data.length; i++) {
            data[i].asset_start_amount = String(data[i].asset_start_amount);
            data[i].asset_end_amount = String(data[i].asset_end_amount);
            data[i].debt_start_amount = String(data[i].debt_start_amount);
            data[i].debt_end_amount = String(data[i].debt_end_amount);
        }

        $.ajax(
        {
            url: createUrl,
            type: "post",
            async: true,
            contentType: 'application/json',
            dataType: "html",
            type: "POST",
            data: JSON.stringify({ id: $("#repId").val(), repDate: $('#hidRepDate').val(), type: $('#hidType').val(), lstBanlance: data }),
            success: function (d) {
                d = eval('(' + d + ')');
                if (d.success) {
                    alert("报表修改成功。");
                    window.location = successUrl
                } else {
                    alert("报表修改失败：" + d.msg);
                }
            }

        })
    }

    function ComputedAmount(data)
    {
        var totolCurrentAssetsSt = 0;//流动资产合计
        var totolCurrentAssetsEd = 0;
        var totolNoCurrentAssetsSt = 0;//非流动资产合计
        var totolNoCurrentAssetsEd=0
        var totolCurrentLiabilitiesSt = 0//流动负债合计
        var totolCurrentLiabilitiesEd = 0
        var totolNoCurrentLiabilitiesSt = 0//非流动负债合计
        var totolNoCurrentLiabilitiesEd = 0;
        var totolLiabilitiesSt = 0;
        var totolLiabilitiesEd = 0;
        var totolOwnersEquitySt = 0//所有者权益（或股东权益）合计
        var totolOwnersEquityEd = 0
        $table = $('#BalanceSheet').bootstrapTable({});
        for (var i = 0; i < data.length; i++) {
            var index=data[i];
            if (index.asset_row_no >= "1" && index.asset_row_no <= "14")
            {
                totolCurrentAssetsSt = accAdd(index.asset_start_amount, totolCurrentAssetsSt);
                totolCurrentAssetsEd = accAdd(index.asset_end_amount, totolCurrentAssetsEd);
            }
          
            if (index.asset_row_no >= "16" && index.asset_row_no <= "28")
            {
                totolNoCurrentAssetsSt = accAdd(index.asset_start_amount, totolNoCurrentAssetsSt);
                totolNoCurrentAssetsEd = accAdd(index.asset_end_amount, totolNoCurrentAssetsEd);
            }
           
            if (index.debt_row_no >= "31" && index.debt_row_no <= "40") {
                totolCurrentLiabilitiesSt = accAdd(index.debt_start_amount, totolCurrentLiabilitiesSt);
                totolCurrentLiabilitiesEd = accAdd(index.debt_end_amount, totolCurrentLiabilitiesEd);
            }
           
            if (index.debt_row_no >= "42" && index.debt_row_no <= "45") {
                totolNoCurrentLiabilitiesSt = accAdd(index.debt_start_amount, totolNoCurrentLiabilitiesSt);
                totolNoCurrentLiabilitiesEd = accAdd(index.debt_end_amount, totolNoCurrentLiabilitiesEd);
            }

            if (index.debt_row_no >= "48" && index.debt_row_no <= "51") {
                totolOwnersEquitySt = accAdd(index.debt_start_amount, totolOwnersEquitySt);
                totolOwnersEquityEd = accAdd(index.debt_end_amount, totolOwnersEquityEd);
            }
            var result = "";

            if (index.asset_row_no == "15") {
                $table.bootstrapTable('updateCell', { index: i, field: "asset_start_amount", value: totolCurrentAssetsSt });
                $table.bootstrapTable('updateCell', { index: i, field: "asset_end_amount", value: totolCurrentAssetsEd });
            }

            if (index.asset_row_no == "29") {
                $table.bootstrapTable('updateCell', { index: i, field: "asset_start_amount", value: totolNoCurrentAssetsSt });
                $table.bootstrapTable('updateCell', { index: i, field: "asset_end_amount", value: totolNoCurrentAssetsEd });
            }
            if (index.asset_row_no == "30") {
                $table.bootstrapTable('updateCell', { index: i, field: "asset_start_amount", value: accAdd(totolCurrentAssetsSt, totolNoCurrentAssetsSt) });
                $table.bootstrapTable('updateCell', { index: i, field: "asset_end_amount", value: accAdd(totolCurrentAssetsEd, totolNoCurrentAssetsEd) });
            }

            if (index.debt_row_no == "41") {
                $table.bootstrapTable('updateCell', { index: i, field: "debt_start_amount", value: totolCurrentLiabilitiesSt });
                $table.bootstrapTable('updateCell', { index: i, field: "debt_end_amount", value: totolCurrentLiabilitiesEd });
            }

            if (index.debt_row_no == "46") {
                $table.bootstrapTable('updateCell', { index: i, field: "debt_start_amount", value: totolNoCurrentLiabilitiesSt });
                $table.bootstrapTable('updateCell', { index: i, field: "debt_end_amount", value: totolNoCurrentLiabilitiesEd });
            }

            if (index.debt_row_no == "47") {
                totolLiabilitiesSt = accAdd(totolCurrentLiabilitiesSt, totolNoCurrentLiabilitiesSt);
                totolLiabilitiesEd = accAdd(totolCurrentLiabilitiesEd, totolNoCurrentLiabilitiesEd);
                $table.bootstrapTable('updateCell', { index: i, field: "debt_start_amount", value: totolLiabilitiesSt });
                $table.bootstrapTable('updateCell', { index: i, field: "debt_end_amount", value: totolLiabilitiesEd });
            }

            if (index.debt_row_no == "52") {
                $table.bootstrapTable('updateCell', { index: i, field: "debt_start_amount", value: totolOwnersEquitySt });
                $table.bootstrapTable('updateCell', { index: i, field: "debt_end_amount", value: totolOwnersEquityEd });
            }

            if (index.debt_row_no == "53") {
                $table.bootstrapTable('updateCell', { index: i, field: "debt_start_amount", value: accAdd(totolOwnersEquitySt, totolLiabilitiesSt) });
                $table.bootstrapTable('updateCell', { index: i, field: "debt_end_amount", value: accAdd(totolOwnersEquityEd, totolLiabilitiesEd) });
            }
        }
    }


    function UpdateTableRow(field, row, oldValue, $el) {
        $table = $('#BalanceSheet').bootstrapTable({});
        $table.bootstrapTable('updateRow', { index: row.rowId, row: row });
        ComputedAmount($('#BalanceSheet').bootstrapTable("getData"));
    }

    function GetAssetDecimalFmter(s, row, index) {
        //if (!row.asset_row_no || row.asset_row_no == "-" || row.asset_row_no == "15" || row.asset_row_no == "29" || row.asset_row_no == "30")
        //    return true;
        //else 
        //    return false;
        if (row.asset_row_no == "9" || row.asset_row_no == "14" || row.asset_row_no == "24" || row.asset_row_no == "26" ||
            row.asset_row_no == "28" ) {
            return false;
        } 
        return true;
    }

    function GetDebtDecimalFmter(s, row, index) {
        //if (!row.debt_row_no || row.debt_row_no == "-" || row.debt_row_no == "41" || row.debt_row_no == "46"
        //    || row.debt_row_no == "47" || row.debt_row_no == "52" || row.debt_row_no == "53")
        //    return true;
        //else
        //    return false;
        //
        if (row.debt_row_no == "38" || row.debt_row_no == "40" || row.debt_row_no == "45")
        {
            return false;
        }
        return true;
    }

    ///结账
    function settled(RepDate, id, status, type, period) {
        $.ajax({
            url: "/IncomeStatement/isFinish?RepDate=" + RepDate + "&status=" + status + "&type=" + period + "&period=" + type,
            type: "POST",
            success: function (data) {
                if ($.parseJSON(data).Result) {
                    if (confirm('确认修改?')) {
                        $.ajax({
                            url: "/BalanceSheet/UpdBalance?id=" + id + "&RepDate=" + RepDate + "&status=" + status + "&type=" + type,
                            type: "POST",
                            success: function (data) {
                                if ($.parseJSON(data).success) {
                                    alert("操作成功！");
                                    location.href = '/BalanceSheet/Index';
                                }
                            },
                            error: function () {
                                alert("操作失败");
                            }

                        });
                    }
                } else {
                    if (status == "已结账") {
                        alert("请先结账之前的月度账单！");
                        location.href = '/BalanceSheet/Index';
                    } else {
                        alert("请先反结账之前的月度账单！");
                    }
                }
            },
            error: function () {
                alert("操作失败");
            }
        });

    }
</script> 